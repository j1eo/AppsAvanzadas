@inherits LayoutComponentBase

@implements IDisposable

@inject NavigationManager NavManager

<TelerikRootComponent IconType="@IconType.Font">
        <AppsAvanzadas.Components.Pages.MainMenu />

        <!-- Espaciador para que el contenido no quede oculto bajo el header fijo -->
    <div class="header-spacer"></div>

        <main>
            @Body
        </main>

        <AppsAvanzadas.Components.Pages.Footer />

        <TelerikMediaQuery Media="(min-width: 641px)" OnChange="@OnMediaQueryChange" />
    </TelerikRootComponent>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private IEnumerable<NavItem> DrawerData { get; set; } = new List<NavItem>()
    {
        new NavItem("Home", FontIcon.Home, "/"),
        new NavItem("Counter", FontIcon.CustomFormat, "/counter"),
        new NavItem("Weather", FontIcon.Globe, "/weather"),
        new NavItem("About", FontIcon.InfoCircle, "/about")
    };

    private bool DrawerExpanded { get; set; } = true;

    private NavItem? DrawerSelectedItem { get; set; }

    private bool LargeScreen { get; set; } = true;

    private void OnMediaQueryChange(bool mediaQueryMatched)
    {
        LargeScreen = DrawerExpanded = mediaQueryMatched;
    }

    private void DrawerExpandedChanged(bool newExpanded)
    {
        if (!LargeScreen && !newExpanded)
        {
            DrawerExpanded = newExpanded;
        }
    }

    private void SelectDrawerItem()
    {
        var url = NavManager.Uri.Replace(NavManager.BaseUri, "/").ToLowerInvariant();

        DrawerSelectedItem = DrawerData.FirstOrDefault(x => x.Url.ToLowerInvariant() == url);
    }

    private void NavManagerLocationChanged(object? sender, LocationChangedEventArgs args)
    {
        var url = args.Location.Replace(NavManager.BaseUri, "/").ToLowerInvariant();

        DrawerSelectedItem = DrawerData.FirstOrDefault(x => x.Url.ToLowerInvariant() == url);

        InvokeAsync(StateHasChanged);
    }

    protected override void OnInitialized()
    {
        SelectDrawerItem();

        NavManager.LocationChanged += NavManagerLocationChanged;

        base.OnInitialized();
    }

    public void Dispose()
    {
        if (NavManager != null)
        {
            NavManager.LocationChanged -= NavManagerLocationChanged;
        }
    }

    public class NavItem
    {
        public string Text { get; set; }
        public object? Icon { get; set; }
        public string Url { get; set; } = string.Empty;

        public NavItem(string text, object? icon, string url)
        {
            Text = text;
            Icon = icon;
            Url = url;
        }
    }
}
